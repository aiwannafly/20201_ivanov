https://www.cs.swarthmore.edu/~aviv/classes/f12/cs43/labs/lab5/lab5.pdf
https://translatedby.com/you/bittorrent-protocol-specification-v1-0-in-detail/into-ru/

1. Реализовать все команды из задания, динамически определять,
   кто чем владеет
2. Сделать так, чтобы в Uploader'e сообщение не парсилось
два раза, а помещалось в удобную структуру с нужными полями.

• (5pt) Choking Protocol: Build a client that can do the above, and also implement the choking algorithm
  described in Cohen’s specification.
• (5pt) Tracker Protocol: Add in features for communicating with a tracker server. Note that you do
not need to implement a tracker.
• (10pt) Interact with other Group: Build a client that can do the above, but can also interact with
another groups client. This must be demonstrated live!
• (25pt) Real Working: Build a client that can work with real world bittorrent clients. (HARD!)

Так. Нужно сделать так, чтобы несколько личей могло скачивать файл и помогать друг другу.
Первый начинает скачивать. Все нормально. Потом начинает скачивать второй. Он цепляется
и к первому тоже. Но у первого лишь часть кусков. И как с этим работать?

0. Самым правильным решением кажется сделать так, что в самом начале раздачи каждый клиент отсылает трекеру
информацию о имеющихся кусках.
Потом есть два варианта:
1. Периодически они будут отсылать трекеру свою обновленную информацию и принимать обновленную информацию.
   Это неплохой вариант.
2. Есть специальные сообщения вида HAVE. Как только лич получает кусок, он всем отсылает информацию,
   что этот самый кусок у него появился. И остальные смогут этот кусок у него запрашивать.
Второй путь привлекательнее, поскольку он более соответствует заданию.
Но все равно без взаимодействия с трекером не получится. Хотя в данном случае оно
весьма простое.

Ок, тогда надо делать пункты 0 и 2.
Конечно, многие вещи в загрузке и раздаче могут усложниться. Но зато торрент станет
намного эффективнее.
*******************************
Вот лич принял кусок. Ему надо всем сказать, что у него появился кусок.
Для этого он посылает сообщение вида HAVE.
Поток раздачи принял это сообщение.
Он должен сказать потоку скачивания, что появился новый кусок. Но как?
Можно и в поток скачивания, и в поток раздачи на старте выдавать
мапу, которая эту инфомрацию будет хранить.
Поток раздачи будет только писать в нее, а поток скачивания
--- только читать.

Возникла проблема.
Вообще говоря, у каждого пира должен быть свой IP адрес.
Тогда, в целом, проблема сразу будет решена.

Так, ладно, я понял. Есть сообщение bitfield.
Оно кратко объясняет, чем кто располагает.
Это именно то, что мне нужно.
К раздатчику подсоединяется клиент.
Сид высылает ему bitfield с имеющимися кусками.
Это уже очень хорошо.

Но пока недостаточно.
Все равно надо реализовать идеологию have.
Хотя стоп...

Вот загрузчик достал кусок. Поток раздачи это видит.
Он берет и отсылает вообще всем, что у меня вот появился кусок.
Даже первому сиду. Да и норм.

    То есть вот был сид. Первый клиент начал скачивать только с него.
Подходит второй клиент и цепляется к ним обоим. Они высылаеюи ему
битфилды --- он теперь знает, у кого что можно просить.
Первый клиент скачал новый кусок. Его поток раздачи это увидел.
Он берет и говорит сиду и второму, что вот появился новый кусок.
Причем это он скажет их потокам загрузки. Это именно то, что нужно.
Щас быстренько это дело реализуем. И, главное, все по канонической
спецификации.

